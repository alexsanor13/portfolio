{"ast":null,"code":"var _jsxFileName = \"/Users/alexsanchezortega/Documents/projects/portfolio/src/pages/contact/Contact.js\",\n    _s = $RefreshSig$();\n\nimport './Contact.css';\nimport { useState } from 'react'; // import { GoogleReCaptcha } from 'react-google-recaptcha-v3';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_CONTACT = {\n  name: '',\n  email: '',\n  message: ''\n};\nexport const Contact = () => {\n  _s();\n\n  const [contact, setContact] = useState(INITIAL_CONTACT);\n  const [verified, setVerified] = useState(false); // const handleVerify = function() {\n  //     setVerified(true)\n  // }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (verified) {\n      alert(\"verificado y enviado\");\n    } else {\n      alert(\"no verificado\");\n    }\n\n    console.log(contact);\n    setContact(INITIAL_CONTACT);\n    setVerified(false);\n  };\n\n  const handleName = e => {\n    let newContact = { ...contact,\n      name: e.target.value\n    };\n    setContact(newContact);\n  };\n\n  const handleEmail = e => {\n    let newContact = { ...contact,\n      email: e.target.value\n    };\n    setContact(newContact);\n  };\n\n  const handleMessage = e => {\n    let newContact = { ...contact,\n      message: e.target.value\n    };\n    setContact(newContact);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"main-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"article\", {\n        id: \"contact-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"contact-title\",\n          children: \"Let's talk.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"contact-p\",\n          children: [\"Have a question or want to work together? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 81\n          }, this), \"Get in touch via the form below, or by emailing \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"mailto:47alexso@gmail.com\",\n            children: \"47alexso@gmail.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"contact-form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter your name\",\n            maxLength: \"256\",\n            value: contact.name,\n            onChange: handleName,\n            autoFocus: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Enter your email address\",\n            maxLength: \"256\",\n            value: contact.email,\n            onChange: handleEmail,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"message\",\n            children: \"Message:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"message\",\n            placeholder: \"Enter your message\",\n            maxLength: \"2000\",\n            value: contact.message,\n            onChange: handleMessage,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-two\",\n            type: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Contact, \"QTEnzSof1GTtYQFH3oJikA9OEic=\");\n\n_c = Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/alexsanchezortega/Documents/projects/portfolio/src/pages/contact/Contact.js"],"names":["useState","INITIAL_CONTACT","name","email","message","Contact","contact","setContact","verified","setVerified","handleSubmit","e","preventDefault","alert","console","log","handleName","newContact","target","value","handleEmail","handleMessage"],"mappings":";;;AAAA,OAAO,eAAP;AACA,SAASA,QAAT,QAAyB,OAAzB,C,CACA;;;AAGA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,KAAK,EAAE,EAFa;AAGpBC,EAAAA,OAAO,EAAE;AAHW,CAAxB;AAMA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACC,eAAD,CAAtC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC,CAFyB,CAKzB;AACA;AACA;;AAEA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGJ,QAAH,EAAY;AACRK,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACH,KAFD,MAGI;AACAA,MAAAA,KAAK,CAAC,eAAD,CAAL;AACH;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;AACAC,IAAAA,UAAU,CAACN,eAAD,CAAV;AACAQ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAZD;;AAcA,QAAMO,UAAU,GAAIL,CAAD,IAAO;AACtB,QAAIM,UAAU,GAAG,EACb,GAAGX,OADU;AAEbJ,MAAAA,IAAI,EAAES,CAAC,CAACO,MAAF,CAASC;AAFF,KAAjB;AAIAZ,IAAAA,UAAU,CAACU,UAAD,CAAV;AACH,GAND;;AAQA,QAAMG,WAAW,GAAIT,CAAD,IAAO;AACvB,QAAIM,UAAU,GAAG,EACb,GAAGX,OADU;AAEbH,MAAAA,KAAK,EAAEQ,CAAC,CAACO,MAAF,CAASC;AAFH,KAAjB;AAIAZ,IAAAA,UAAU,CAACU,UAAD,CAAV;AACH,GAND;;AAQA,QAAMI,aAAa,GAAIV,CAAD,IAAO;AACzB,QAAIM,UAAU,GAAG,EACb,GAAGX,OADU;AAEbF,MAAAA,OAAO,EAAEO,CAAC,CAACO,MAAF,CAASC;AAFL,KAAjB;AAIAZ,IAAAA,UAAU,CAACU,UAAD,CAAV;AACH,GAND;;AAQA,sBACI;AAAM,IAAA,EAAE,EAAC,cAAT;AAAA,2BACI;AAAA,6BACI;AAAS,QAAA,EAAE,EAAC,iBAAZ;AAAA,gCACI;AAAI,UAAA,EAAE,EAAC,eAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,EAAE,EAAC,WAAN;AAAA,gFAA4D;AAAA;AAAA;AAAA;AAAA,kBAA5D,mEACgB;AAAG,YAAA,IAAI,EAAC,2BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAM,UAAA,EAAE,EAAC,cAAT;AAAwB,UAAA,QAAQ,EAAEP,YAAlC;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,MAAtB;AAA6B,YAAA,IAAI,EAAC,MAAlC;AAAyC,YAAA,WAAW,EAAC,iBAArD;AAAuE,YAAA,SAAS,EAAC,KAAjF;AAAuF,YAAA,KAAK,EAAEJ,OAAO,CAACJ,IAAtG;AAA4G,YAAA,QAAQ,EAAEc,UAAtH;AAAkI,YAAA,SAAS,MAA3I;AACI,YAAA,QAAQ;AADZ;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAII;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,EAAE,EAAC,OAAvB;AAA+B,YAAA,IAAI,EAAC,OAApC;AAA4C,YAAA,WAAW,EAAC,0BAAxD;AAAmF,YAAA,SAAS,EAAC,KAA7F;AAAmG,YAAA,KAAK,EAAEV,OAAO,CAACH,KAAlH;AAAyH,YAAA,QAAQ,EAAEiB,WAAnI;AACI,YAAA,QAAQ;AADZ;AAAA;AAAA;AAAA;AAAA,kBALJ,eAOI;AAAO,YAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAU,YAAA,IAAI,EAAC,SAAf;AAAyB,YAAA,WAAW,EAAC,oBAArC;AAA0D,YAAA,SAAS,EAAC,MAApE;AAA2E,YAAA,KAAK,EAAEd,OAAO,CAACF,OAA1F;AAAmG,YAAA,QAAQ,EAAEiB,aAA7G;AAA4H,YAAA,QAAQ;AAApI;AAAA;AAAA;AAAA;AAAA,kBARJ,eASI;AAAA;AAAA;AAAA;AAAA,kBATJ,eAWI;AAAQ,YAAA,SAAS,EAAC,SAAlB;AAA4B,YAAA,IAAI,EAAC,QAAjC;AAAA,mCAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAxEM;;GAAMhB,O;;KAAAA,O","sourcesContent":["import './Contact.css';\nimport { useState } from 'react'\n// import { GoogleReCaptcha } from 'react-google-recaptcha-v3';\n\n\nconst INITIAL_CONTACT = {\n    name: '',\n    email: '',\n    message: ''\n}\n\nexport const Contact = () => {\n    const [contact, setContact] = useState(INITIAL_CONTACT)\n    const [verified, setVerified] = useState(false)\n\n\n    // const handleVerify = function() {\n    //     setVerified(true)\n    // }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(verified){\n            alert(\"verificado y enviado\")\n        }\n        else{\n            alert(\"no verificado\")\n        }\n        \n        console.log(contact)\n        setContact(INITIAL_CONTACT)\n        setVerified(false)\n    }\n\n    const handleName = (e) => {\n        let newContact = {\n            ...contact,\n            name: e.target.value\n        }\n        setContact(newContact)\n    } \n    \n    const handleEmail = (e) => {\n        let newContact = {\n            ...contact,\n            email: e.target.value\n        }\n        setContact(newContact)\n    }\n    \n    const handleMessage = (e) => {\n        let newContact = {\n            ...contact,\n            message: e.target.value\n        }\n        setContact(newContact)\n    }\n\n    return (\n        <main id=\"main-wrapper\">\n            <section>\n                <article id=\"contact-content\">\n                    <h1 id=\"contact-title\">Let's talk.</h1>\n                    <p id=\"contact-p\">Have a question or want to work together? <br/>Get in touch via the form below, or\n                        by emailing <a href=\"mailto:47alexso@gmail.com\">47alexso@gmail.com</a>.\n                    </p>\n                    <form id=\"contact-form\" onSubmit={handleSubmit}>\n                        <label htmlFor=\"name\">Name:</label>\n                        <input name=\"name\" id=\"name\" type=\"text\" placeholder=\"Enter your name\" maxLength=\"256\" value={contact.name} onChange={handleName} autoFocus\n                            required />\n                        <label htmlFor=\"email\">Email address:</label>\n                        <input name=\"email\" id=\"email\" type=\"email\" placeholder=\"Enter your email address\" maxLength=\"256\" value={contact.email} onChange={handleEmail}\n                            required />\n                        <label htmlFor=\"message\">Message:</label>\n                        <textarea name=\"message\" placeholder=\"Enter your message\" maxLength=\"2000\" value={contact.message} onChange={handleMessage} required></textarea>\n                        <br/>\n                        {/* <GoogleReCaptcha onVerify={handleVerify} /> */}\n                        <button className=\"btn-two\" type=\"submit\"><span>Submit</span></button>\n                    </form>\n                </article>\n            </section>\n        </main>\n  );\n}"]},"metadata":{},"sourceType":"module"}